@import "./colors";
@import "./fonts";
$action-bar-width: 600px;
$action-bar-height: 200px;

$inner-border-width: 15px;

@mixin action-bar-button($rotation) {
  border: none;
  outline: unset;
  font-family: $subheader-stack;
  color: $action-bar-bg;
  background-color: $action-bar-ink;
  display: flex;
  align-items: center;
  cursor: pointer;
  h1 {
    font-family: $title-stack;
    text-align: center;
    width: 100%;
  }
  h1,
  h2,
  h3 {
    transform: rotate($rotation);
    cursor: pointer;
    user-select: none;
    font-size: 2em;
    text-align: center;
    width: 100%;
  }
}

//Layout
.action-bar-container{
  grid-area: action;
  margin: auto;
  height: auto;
}

.action-bar{
  height: auto;
  width: $action-bar-width;
  max-height: $action-bar-height;
}
.action{
  height: $action-bar-height - ($inner-border-width * 2);
  display: flex;
  &.ja-nein{
    .vote-options {
      display: flex;
      justify-content: space-around;
      flex-grow: 1;
      .option{
        height: 100%;
        max-width: 20vw;
        background-color: transparent;
        outline: unset;
        border: unset;
        img{
          height: 100%;
        }
      }
    }
    .vote-button{
      flex-grow: 0;
      @include action-bar-button(90deg);
      margin-right: -$inner-border-width;
    }
  }
  &.discard, &.view-three{
    .policy-cards{
      display: flex;
      flex-direction: row;
      //NOTE: Flex grow needs to be defined very early
      // Otherwise, the content will be justified first AND then size will be adjusted, resulting in strange behavior.
      flex-grow: 1;
      height: 100%;
      align-items: center;
      justify-content: space-around;
      .policy{
        height: 100%; 
        width: auto;
        max-width: 20vw;
        img{
          height: 100%;
        }
      }
    }
    button{
      @include action-bar-button(90deg);
      margin-right: -$inner-border-width;
    }
  }
  &.pick-player, &.exit{
    justify-content: center;
    align-items: center;
    button{
      @include action-bar-button(0deg);
      min-width: 300px;
      padding: 50px;
    }
  }
  &.membership{
    display: flex;
    .membership-card{
      flex-grow: 1;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 10px;
      img{
        height: 100%;
        width: auto;
      }
    }
    button{
      @include action-bar-button(90deg);
    }
  }
}

//Styling
.action-bar{
  background-color: $action-bar-bg;
  border: 13px solid black;
  border-image: url(./media/border/action-border.png) 30 round;
  border-image-outset: 6px;
  margin: 6px;
}
.action{
  border: 15px solid $action-bar-ink;
}

.stacked-buttons{
  display:flex;
  flex-direction: column;
  button{
    flex-grow: 1;
  }
  .discard-button{
    padding-bottom: 10px;
    border-bottom: 2px solid black !important;
  }
}

//Animations
.policy{
  cursor: pointer;
  transition: .25s filter;
  &:hover{
    filter: grayscale(50%);
  }
  &.selected{
    filter: grayscale(100%);
  }
}

.ja-nein{
  .vote-options .option img{
    cursor: pointer;
    transition: 0.25s transform;
    transform: scale(0.75);
    &:hover {
      transform: scale(0.85);
    }
    &.selected {
      transform: scale(1);
    }
  }
}

@media screen and (max-width: $action-bar-width * 1.11){
  // 1.11 = 100%/90%. Seamlessly converts to filled-width.
  .action-bar{
    width: 90vw;
  }
}

// @media screen and (max-width: $action-bar-width){
//   .action-bar{
//     transform: scale(calc(300px / 100vw));
//   }
// }